name: CI/CD to EC2 with Docker
on:
  push:
    branches:
      - main
    # v2 도 만들어야함.
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Create application-secret.properties
        run: |
          echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > src/main/resources/application-secret.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test

  deploy:
    name: Build Docker JAR and Deploy to EC2
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      - name: Build and Push Docker Image
        run: |
          docker build -t jmk445/ureca-final-project-user-backend:${{ github.sha }} .
          docker push jmk445/ureca-final-project-user-backend:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2 via SSM
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --targets "Key=instanceIds,Values=${{ secrets.AWS_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy new Docker image" \
            --parameters 'commands=[
              "docker pull jmk445/ureca-final-project-user-backend:${{ github.sha }}",
              "docker stop ureca-final-project-user-backend || true",
              "docker rm ureca-final-project-user-backend || true",
              "docker run -d --name ureca-final-project-user-backend -p 8082:8082 jmk445/ureca-final-project-user-backend:${{ github.sha }}"
            ]' \
            --query "Command.CommandId" \
            --output text)

          echo "command_id=$COMMAND_ID" >> $GITHUB_OUTPUT
